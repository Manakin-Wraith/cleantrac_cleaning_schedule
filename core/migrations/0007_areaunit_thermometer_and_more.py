# Generated by Django 5.2.1 on 2025-05-26 09:52

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0006_passwordresettoken"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AreaUnit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "target_temperature_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "target_temperature_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="area_units",
                        to="core.department",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Thermometer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("serial_number", models.CharField(max_length=100, unique=True)),
                ("model_identifier", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("verified", "Verified"),
                            ("needs_verification", "Needs Verification"),
                            ("out_of_service", "Out of Service"),
                        ],
                        default="needs_verification",
                        max_length=20,
                    ),
                ),
                ("last_verification_date", models.DateField(blank=True, null=True)),
                ("verification_expiry_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="thermometers",
                        to="core.department",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ThermometerVerificationAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_date", models.DateField(default=django.utils.timezone.now)),
                ("is_active", models.BooleanField(default=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="thermometer_assignments_made",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="thermometer_verification_assignments",
                        to="core.department",
                    ),
                ),
                (
                    "staff_member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="thermometer_verification_assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Thermometer Verification Assignment",
                "verbose_name_plural": "Thermometer Verification Assignments",
            },
        ),
        migrations.CreateModel(
            name="ThermometerVerificationRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_verified", models.DateField()),
                ("calibrated_instrument_no", models.CharField(max_length=100)),
                (
                    "reading_after_verification",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("manager_signature", models.TextField(blank=True, null=True)),
                ("corrective_action", models.TextField(blank=True, null=True)),
                (
                    "photo_evidence",
                    models.ImageField(
                        blank=True, null=True, upload_to="thermometer_verifications/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "calibrated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="thermometer_verifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "thermometer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verification_records",
                        to="core.thermometer",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TemperatureLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "log_datetime",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "temperature_reading",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "time_period",
                    models.CharField(
                        choices=[("AM", "Morning"), ("PM", "Afternoon")], max_length=2
                    ),
                ),
                ("corrective_action", models.TextField(blank=True, null=True)),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="temperature_logs/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "area_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="temperature_logs",
                        to="core.areaunit",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="temperature_logs",
                        to="core.department",
                    ),
                ),
                (
                    "logged_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="temperature_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "thermometer_used",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="temperature_logs",
                        to="core.thermometer",
                    ),
                ),
                (
                    "verification_record_at_time_of_log",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="temperature_logs",
                        to="core.thermometerverificationrecord",
                    ),
                ),
            ],
            options={
                "verbose_name": "Temperature Log",
                "verbose_name_plural": "Temperature Logs",
                "ordering": ["-log_datetime"],
            },
        ),
    ]
