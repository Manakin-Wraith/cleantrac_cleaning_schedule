"""
Django settings for cleantrac_project project.

Generated by 'django-admin startproject' using Django 4.2.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from frontend/.env
FRONTEND_ENV_PATH = BASE_DIR / 'frontend' / '.env'
if FRONTEND_ENV_PATH.exists():
    load_dotenv(dotenv_path=FRONTEND_ENV_PATH)
else:
    print(f"WARNING: .env file not found at {FRONTEND_ENV_PATH}.")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", "django-insecure-placeholder-change-me")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "False").lower() == "true"

# Allow our frontend to embed PDFs via <iframe> for same-origin requests.
# This is safe because documents are served from the same domain / network segment.
SECURE_BROWSER_XSS_FILTER = True
# Default clickjacking protection for production
X_FRAME_OPTIONS = "SAMEORIGIN"




ALLOWED_HOSTS = [
    "localhost",
    "127.0.0.1",
    "10.0.0.42",  # your local IP
    "0.0.0.0",
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "rest_framework.authtoken",  # Add this for token authentication
    "corsheaders",  # For CORS
    "core.apps.CoreConfig",
]

# CORS Configuration
CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",         # For local frontend development (same machine)
    "http://127.0.0.1:5173",       # Also for local frontend development
    "http://10.0.0.42:5173",       # For accessing frontend from other devices on the network
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "corsheaders.middleware.CorsMiddleware",  # CORS middleware - place it high, especially before CommonMiddleware
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "core.middleware.AllowIframeForMedia",
]

# ------------------------------------------------------------------
# Local-development security relaxations
# ------------------------------------------------------------------
if DEBUG:
    # Allow any site (e.g. Vite on another port) to embed this Django
    # instance in an <iframe>. DO NOT use in production.
    X_FRAME_OPTIONS = "ALLOWALL"
    # Remove the default clickjacking middleware so no X-Frame-Options header is added.
    MIDDLEWARE = [mw for mw in MIDDLEWARE if mw != "django.middleware.clickjacking.XFrameOptionsMiddleware"]



ROOT_URLCONF = "cleantrac_project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "cleantrac_project.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# cleantrac_project/settings.py
DATABASES["import_receiving"] = {
    "ENGINE": "django.db.backends.postgresql",
    "NAME": "import_receiving_db",
    "USER": "postgres",
    "PASSWORD": "postgres",
    "HOST": "localhost",
    "PORT": "5432",
}

# Live SPATRAC traceability database (read-only)
DATABASES["traceability_source"] = {
    "ENGINE": "django.db.backends.postgresql",
    "NAME": "traceability_db",
    "USER": "postgres",
    "PASSWORD": "postgres",
    "HOST": "localhost",
    "PORT": "5432",
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Africa/Johannesburg"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Media files (Uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Login Redirect URL
LOGIN_REDIRECT_URL = '/api/'  # Redirect to API root after login

# Django REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',  # For browsable API and Django Admin
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',  # Default to requiring authentication
    )
}

# Optional: If you want to allow all origins (less secure, use for quick testing only)
# CORS_ALLOW_ALL_ORIGINS = True

# Optional: Allow credentials (cookies, authorization headers) to be sent with requests
CORS_ALLOW_CREDENTIALS = True

# Optional: If you need to allow specific headers beyond the defaults
# CORS_ALLOW_HEADERS = list(default_headers) + [
#     'my-custom-header',
# ]

# Optional: If you need to allow specific methods beyond the defaults (GET, POST, HEAD, OPTIONS)
# CORS_ALLOW_METHODS = list(default_methods) + [
#     'PUT',
#     'DELETE',
# ]
